%{
    
    #import "y.tab.h"
    #import "MessageBlocks.h"
    
    void yyerror(char *s);
    extern NSMutableArray * tmpRSObjectRetainedBuffer;
    RSObject *tmpToken;
%}

%%

-?[0-9]+\.[0-9]* { tmpToken = make_floatnum(atof(yytext)); yylval.expression = tmpToken; [tmpRSObjectRetainedBuffer addObject: tmpToken]; return FLOAT; }

-?[0-9]+ { tmpToken = make_fixnum(atoi(yytext)); yylval.expression = tmpToken; [tmpRSObjectRetainedBuffer addObject: tmpToken]; return FIX; }

\#t { tmpToken = true_value; yylval.expression = tmpToken; [tmpRSObjectRetainedBuffer addObject: tmpToken]; return _BOOL;}
\#f { tmpToken = false_value; yylval.expression = tmpToken; [tmpRSObjectRetainedBuffer addObject: tmpToken]; return _BOOL;}
\#\\[a-zA-Z] { tmpToken = read_character([NSMutableString stringWithUTF8String:yytext+2]); yylval.expression = tmpToken; [tmpRSObjectRetainedBuffer addObject: tmpToken]; return CHAR;}

[a-zA-Z!$%&\*/:<>=\?\^_~]([a-zA-Z!$%&\*/:<>=\?\^_~]|[0-9]|[+-\.@])*|[+-]|\.\.\. {yylval.expression = make_symbol([NSString stringWithUTF8String:yytext]); return IDENTIFIER;}

\".*\" { tmpToken = make_string([NSString stringWithFormat:@"\"%s\"",yytext]); yylval.expression = tmpToken; [tmpRSObjectRetainedBuffer addObject: tmpToken]; return STR;}

[\n\t ] { }

. { return yytext[0]; };

%%

int yywrap()
{
    // This is a place where one can append more text if it would be needed, quit for now
    return 1;
}

void yyerror(char *s)
{
    //if (ParseTestFailBlock)
    //ParseTestFailBlock([NSString stringWithFormat:@"%s", s]);
    NSLog(@"%s", s);
}

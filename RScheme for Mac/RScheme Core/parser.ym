
%{
    #import <Foundation/Foundation.h>
    #import "MessageBlocks.h"
    #import "RSSchemeParserInternal.h"
    
    int yylex(void);
    extern NSMutableArray * tmpRSObjectRetainedBuffer;
    RSObject * tmpRSObject;
    void yyerror(NSMutableArray **expressions, char *s);
    
    %}

%parse-param {NSMutableArray **expressions}
%union {
    __unsafe_unretained RSObject * expression;
}

%token <expression> FIX
%token <expression> FLOAT

%token <expression> IDENTIFIER
%token <expression> DEFINE
%token <expression> SIGNAL

%token <expression> STR
%token <expression> CHAR
%token <expression> _BOOL

%type <expression> expression
%type <expression> program
%type <expression> statement
%type <expression> pair
%%

program: statement {NSLog(@"statement: %@", $1); if($1.isSignal == NO){$1.sensitiveSignals = [NSMutableSet new];}[*expressions addObject: $1]; tmpRSObjectRetainedBuffer = [[NSMutableArray alloc] init];}
| program statement {NSLog(@"statements continue: %@", $2); if($2.isSignal == NO){$2.sensitiveSignals = [NSMutableSet new];}[*expressions addObject: $2]; tmpRSObjectRetainedBuffer = [[NSMutableArray alloc] init];}

statement : expression {$$ = $1;}
;

expression : '(' pair {$$ = $2;}
| '\'' expression {tmpRSObject = cons(quote_symbol, cons($2, the_empty_list)); [tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject; NSLog(@"quoted");}
| FLOAT {$$ = $1;}
| FIX {$$ = $1;}
| _BOOL {$$ = $1;}
| CHAR {$$ = $1;}
| IDENTIFIER {$$ = $1;}
| SIGNAL {$$ = $1;}
| '(' DEFINE expression expression ')'{ tmpRSObject = cons($2, cons($3, cons($4, the_empty_list))); [tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject; if($3.sensitiveSignals.count){NSLog(@"define signal"); $$.sensitiveSignals = $4.sensitiveSignals; $$.isSignal = YES; NSLog(@"difine_signal sensitive: %@ %@", $3, $$.sensitiveSignals);}}
;

pair : expression pair {NSLog(@"%@ pairs", $1); tmpRSObject = cons($1, $2); [tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject; [$$.sensitiveSignals unionSet: $1.sensitiveSignals]; [$$.sensitiveSignals unionSet: $2.sensitiveSignals];}
| ')' {NSLog(@"pair 2"); $$ = the_empty_list;}
;

%%

%{
    #import <Foundation/Foundation.h>
    #import "MessageBlocks.h"
    #import "RSSchemeParserInternal.h"
    
    int yylex(void);
    extern NSMutableArray * tmpRSObjectRetainedBuffer;
    RSObject * tmpRSObject;
    void yyerror(NSMutableArray **expressions, char *s);
    
%}

%parse-param {NSMutableArray **expressions}
%union {
    __unsafe_unretained RSObject * expression;
}

%token <expression> FIX
%token <expression> FLOAT

%token <expression> IDENTIFIER
%token <expression> DEFINE
%token <expression> SIGNAL

%token <expression> STR
%token <expression> CHAR
%token <expression> _BOOL

%type <expression> expression
%type <expression> pair
%type <expression> statement
%type <expression> define_signal
%type <expression> define_other
%%

program: statement {NSLog(@"statement: %@", $1); [*expressions addObject: $1]; tmpRSObjectRetainedBuffer = [[NSMutableArray alloc] init];}
| program statement {NSLog(@"statements continue: %@", $2); [*expressions addObject: $2]; tmpRSObjectRetainedBuffer = [[NSMutableArray alloc] init];}

statement: define_signal {$$ = $1;}
| expression {$$ = $1; $$.sensitiveSignals = [[NSMutableSet alloc] init];}

expression: '(' pair {NSLog(@"pairs"); $$ = $2;}
| '\'' expression {NSLog(@"quoted"); tmpRSObject = cons(quote_symbol, cons($2, the_empty_list)); [tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject;}
| define_other { $$ = $1; NSLog(@"expression have define_other");}
| FLOAT {$$ = $1; NSLog(@"FLOAT");}
| FIX {$$ = $1; NSLog(@"FIX");}
| _BOOL {$$ = $1; NSLog(@"BOOL");}
| CHAR {$$ = $1; NSLog(@"CHAR");}
| IDENTIFIER {$$ = $1; NSLog(@"IDENTIFIER");}
| SIGNAL {$$ = $1; NSLog(@"has SIGNAL");}
| STR {$$ = $1; NSLog(@"has STR");}

pair: expression pair {NSLog(@"%@ pairs", $1); tmpRSObject = cons($1, $2); [tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject; [$$.sensitiveSignals unionSet: $1.sensitiveSignals]; [$$.sensitiveSignals unionSet: $2.sensitiveSignals];}
| ')' {NSLog(@"pair end"); $$ = the_empty_list;}

define_signal: '(' DEFINE SIGNAL expression ')' { tmpRSObject = cons($2, cons($3, cons($4, the_empty_list))); [tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject; NSLog(@"define signal"); $$.sensitiveSignals = $4.sensitiveSignals; NSLog(@"difine_signal sensitive: %@ %@", $3, $$.sensitiveSignals);}

define_other : '(' DEFINE IDENTIFIER expression ')' {NSLog(@"normal define"); tmpRSObject = cons($2, cons($3, cons($4, the_empty_list))); [tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject;}
| '(' DEFINE SIGNAL ')' {NSLog(@"nil signal define"); tmpRSObject = cons($2, cons($3, cons(the_empty_list, the_empty_list))); [tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject;}
| '(' DEFINE IDENTIFIER ')' {NSLog(@"nil Var define"); tmpRSObject = cons($2, cons($3, cons(the_empty_list, the_empty_list))); [tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject;}

%%


%{
    #import <Foundation/Foundation.h>
    #import "MessageBlocks.h"
    #import "RSSchemeParserInternal.h"
    
    int yylex(void);
    extern NSMutableArray * tmpRSObjectRetainedBuffer;
    RSObject * tmpRSObject;
    void yyerror(NSMutableArray **expressions, char *s);
    
%}

%parse-param {NSMutableArray **expressions}
%union {
    __unsafe_unretained RSObject * expression;
}

%token <expression> FIX
%token <expression> FLOAT

%token <expression> IDENTIFIER
%token <expression> DEFINE
%token <expression> SIGNAL

%token <expression> STR
%token <expression> CHAR
%token <expression> _BOOL

%type <expression> expression
%type <expression> expression_static
%type <expression> expression_signal
%type <expression> pair_static
%type <expression> pair_signal
%type <expression> statement
%%

program :
statement {NSLog(@"expr: %@", $1); [*expressions addObject: $1]; tmpRSObjectRetainedBuffer = [[NSMutableArray alloc] init];}
| program statement {NSLog(@"expr: %@", $2); [*expressions addObject: $2]; tmpRSObjectRetainedBuffer = [[NSMutableArray alloc] init];}
;

statement :
'(' DEFINE SIGNAL expression ')' {tmpRSObject = cons($2, cons($3, cons($4,the_empty_list)));[tmpRSObject.sensitiveSignals setSet: $4.sensitiveSignals];[tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject;NSLog(@"define");}
/* | '(' DEFINE '(' SIGNAL pair_static ')' expression ')' */
| expression { $$ = $1;}
;

expression :
expression_signal {$$ = $1;}
| expression_static {$$ = $1;}
;

expression_static:
'(' pair_static {$$ = $2;}
| '\'' expression_static {tmpRSObject = cons(quote_symbol, cons($2, the_empty_list)); [tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject; NSLog(@"quoted");}
| FLOAT {$$ = $1;}
| FIX {$$ = $1;}
| _BOOL {$$ = $1;}
| CHAR {$$ = $1;}
| IDENTIFIER {$$ = $1;}
|'(' DEFINE expression_static expression_static ')' {tmpRSObject = cons($2, cons($3, cons($4,the_empty_list)));[tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject;NSLog(@"define");}
;

expression_signal:
'(' pair_signal {$$ = $2;}
| SIGNAL {$$ = $1;}
|'(' DEFINE expression_static expression_signal ')' {tmpRSObject = cons($2, cons($3, cons($4,the_empty_list))); [tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject;NSLog(@"define");}
;

pair_static : expression_static pair_static {NSLog(@"pair 1"); tmpRSObject = cons($1, $2); [tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject;}
| ')' {NSLog(@"pair 2"); $$ = the_empty_list;}
;

pair_signal : expression_signal pair_static {NSLog(@"pair 1"); tmpRSObject = cons($1, $2); [tmpRSObject.sensitiveSignals setSet: $1.sensitiveSignals]; [tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject;}
|expression pair_signal {NSLog(@"pair 1"); tmpRSObject = cons($1, $2);[tmpRSObject.sensitiveSignals setSet: $1.sensitiveSignals]; [tmpRSObject.sensitiveSignals unionSet: $2.sensitiveSignals]; [tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject;}
;

%%


%{
    #import <Foundation/Foundation.h>
    #import "MessageBlocks.h"
    #import "RSSchemeParserInternal.h"
    
    int yylex(void);
    extern NSMutableArray * tmpRSObjectRetainedBuffer;
    RSObject * tmpRSObject;
    void yyerror(YYParserParams *params, char *s);
    
%}

%parse-param {YYParserParams *params}
%union {
    __unsafe_unretained RSObject * expression;
}

%token <expression> FIX
%token <expression> FLOAT

%token <expression> IDENTIFIER
%token <expression> DEFINE
%token <expression> SIGNAL

%token <expression> STR
%token <expression> CHAR
%token <expression> _BOOL

%type <expression> expression
%type <expression> expression_static
%type <expression> expression_signal
%type <expression> pair_static
%type <expression> pair_signal
%type <expression> statement
%%

prog : expr {_write(outputString, eval($1, env));}
| prog expr {_write(outputString, eval($2, env));}
;

expr : '(' pair {$$ = $2;}
| '\'' expr {tmpRSObject = cons(quote_symbol, cons($2, the_empty_list)); [tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject;}
| FLOAT {$$ = $1;}
| FIX {$$ = $1;}
| _BOOL {$$ = $1;}
| CHAR {$$ = $1;}
| IDENTIFIER {$$ = $1;}
|'(' DEFINE expression_static expression_static ')' {tmpRSObject = cons($2, cons($3, cons($4,the_empty_list)));[tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject;NSLog(@"define");}
;

pair : expr pair {tmpRSObject = cons($1, $2); [tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject;}
| ')' {$$ = the_empty_list;}
;

pair_signal : expression_signal pair_static {NSLog(@"pair 1"); tmpRSObject = cons($1, $2); [tmpRSObject.sensitiveSignals setSet: $1.sensitiveSignals]; [tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject;}
|expression pair_signal {NSLog(@"pair 1"); tmpRSObject = cons($1, $2);[tmpRSObject.sensitiveSignals setSet: $1.sensitiveSignals]; [tmpRSObject.sensitiveSignals unionSet: $2.sensitiveSignals]; [tmpRSObjectRetainedBuffer addObject: tmpRSObject]; $$ = tmpRSObject;}
;

%%
